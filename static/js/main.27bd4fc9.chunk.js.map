{"version":3,"sources":["components/Header/Header.module.css","constants/pages.js","constants/feed.js","constants/index.js","callers/feeds/hoopsHype.js","callers/feeds/realGM.js","components/Header/Header.js","callers/feeds/index.js","callers/index.js","callers/getArticles.js","components/NewsFeed/Articles/Article/Article.js","components/NewsFeed/Articles/Articles.js","components/NewsFeed/NewsFeed.js","components/App.js","serviceWorker.js","index.js","components/NewsFeed/Articles/Article/Article.module.css"],"names":["module","exports","Header","SiteName","Icon","Link","__webpack_require__","r","__webpack_exports__","pages","HOME","NEWS","STATS","feed","CORS_PROXY","MOMENT_FORMAT","RSS_TO_JSON_KEY","d","require","default","bluebird__WEBPACK_IMPORTED_MODULE_0__","bluebird__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","lodash__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_2___default","_constants__WEBPACK_IMPORTED_MODULE_3__","getHoopsHypeFeed","URL","concat","BProm","resolve","reject","fetch","then","resp","json","data","items","articles","forEach","article","push","guid","_","get","author","link","thumbnail","title","pubDate","formattedPubDate","moment","format","content","categories","source","catch","err","console","error","getTagList","tags","split","getRealGMFeed","props","linkClickedHandler","event","clickedId","target","id","setCurrentPage","react_default","a","createElement","Row","className","style","Col","xs","onClick","SportsBasketballRounded_default","hoopsHype","realGM","callers","getArticles","Object","toConsumableArray","sortedArticles","sortBy","reverse","log","Article","_useState","useState","_useState2","slicedToArray","hideContent","setHideContent","_useState3","_useState4","readMore","setReadMore","image","Container","md","Image","src","alt","ArticleInfo","ArticleTitle","href","Author","PubDate","Categories","join","renderCategories","Button","variant","hidden","dangerouslySetInnerHTML","__html","Articles","corsProxy","setArticles","useEffect","Callers","map","Articles_Article_Article","key","uuidv4","NewsFeed","NewsFeed_Articles_Articles","App","Fragment","components_Header_Header","page","components_NewsFeed_NewsFeed","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27bd4fc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"SiteName\":\"Header_SiteName__3GLMr\",\"Icon\":\"Header_Icon__2oxOJ\",\"Link\":\"Header_Link__C0f_0\"};","const pages = {\n  HOME: 'HOME',\n  NEWS: 'NEWS',\n  STATS: 'STATS'\n};\n\nexport default pages;","const feed = {\n  CORS_PROXY: 'https://cors-anywhere.herokuapp.com/',\n  MOMENT_FORMAT: 'dddd, MMMM D YYYY, h:mm a',\n  RSS_TO_JSON_KEY: 'yh935un0aqrg3qqwu4v8thtglt8kfelword8tbr2',\n};\n\nexport default feed;","export const pages = require('./pages').default;\nexport const feed = require('./feed').default;","import BProm from 'bluebird';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport {feed} from '../../constants';\n\nconst getHoopsHypeFeed = () => {\n  const URL = `https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fhoopshype.com%2Ffeed%2F&api_key=${feed.RSS_TO_JSON_KEY}`;\n  return new BProm((resolve, reject) => {\n    fetch(URL)\n      .then(resp => resp.json())\n      .then(data => {\n        const items = data.items;\n        const articles = [];\n        items.forEach(article => {\n          articles.push({\n            guid: _.get(article, 'guid'),\n            author: _.get(article, 'author'),\n            link: _.get(article, 'link'),\n            thumbnail: _.get(article, 'thumbnail'),\n            title: _.get(article, 'title'),\n            pubDate: _.get(article, 'pubDate'),\n            formattedPubDate: moment(_.get(article, 'pubDate')).format(feed.MOMENT_FORMAT),\n            content: _.get(article, 'content'),\n            categories: _.get(article, 'categories'),\n            source: 'Hoops Hype',\n          });\n        });\n\n        resolve(articles);\n      })\n      .catch(err => {\n        console.error('Error: ', err);\n      })\n  });\n};\n\nexport default getHoopsHypeFeed;\n","import BProm from 'bluebird';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport {feed} from '../../constants';\n\nconst getRealGMFeed = () => {\n  const URL = `https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fbasketball.realgm.com%2Frss%2Fwiretap%2F0%2F0.xml&api_key=${feed.RSS_TO_JSON_KEY}`;\n  return new BProm((resolve, reject) => {\n    fetch(URL)\n      .then(resp => resp.json())\n      .then(data => {\n        const items = data.items;\n        const tags = getTagList(_.get(data, 'feed.description'));\n        const articles = [];\n        items.forEach((article) => {\n          articles.push({\n            guid: _.get(article, 'guid'),\n            author: _.get(article, 'author'),\n            link: _.get(article, 'link'),\n            thumbnail: _.get(article, 'thumbnail'),\n            title: _.get(article, 'title'),\n            pubDate: _.get(article, 'pubDate'),\n            formattedPubDate: moment(_.get(article, 'pubDate')).format(feed.MOMENT_FORMAT),\n            content: _.get(article, 'content'),\n            categories: tags,\n            source: 'Real GM',\n          });\n        });\n        resolve(articles);\n      })\n      .catch(err => {\n        reject(err);\n      })\n  })\n};\n\nconst getTagList = (tags) => {\n  return tags.split(', ');\n};\n\nexport default getRealGMFeed;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport style from \"./Header.module.css\";\nimport {pages} from '../../constants';\nimport Icon from '@material-ui/core/Icon';\nimport SportsBasketballRoundedIcon from '@material-ui/icons/SportsBasketballRounded';\n\nconst Header = props => {\n  const linkClickedHandler = event => {\n    const clickedId = event.target.id;\n    const { setCurrentPage } = props;\n\n    switch (clickedId) {\n      case pages.HOME:\n      case pages.NEWS:\n        setCurrentPage(clickedId);\n        break;\n      case pages.STATS:\n        setCurrentPage(clickedId);\n        break;\n      default:\n        setCurrentPage(pages.NEWS);\n    }\n  };\n\n  return (\n    <Row className={style.Header}>\n      <Col\n        xs={9}\n        id={pages.HOME}\n        className={`${style.SiteName} ${style.Link}`}\n        onClick={linkClickedHandler}\n      >\n        <Icon className={style.Icon}>\n          <SportsBasketballRoundedIcon />\n        </Icon>\n        GoalTending\n      </Col>\n      <Col\n        xs={1}\n        id={pages.NEWS}\n        className={`${style.Link}`}\n        onClick={linkClickedHandler}\n      >\n        News\n      </Col>\n    </Row>\n  );\n};\n\nexport default Header;\n","export const hoopsHype = require('./hoopsHype').default;\nexport const realGM = require('./realGM').default;","import getArticles from './getArticles';\n\nlet callers = {\n  getArticles: getArticles,\n};\n\nexport default callers;\n","import BProm from 'bluebird';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport {hoopsHype, realGM} from './feeds';\n\nconst getArticles = () => {\n  let articles = [];\n  return new BProm((resolve, reject) => {\n    hoopsHype().then(data => {\n      articles = [\n        ...articles,\n        ...data\n      ];\n      return realGM();\n    })\n    .then(data => {\n      articles = [\n        ...articles,\n        ...data\n      ];\n\n      // this needs to be called last after all the articles have been retrieved\n      const sortedArticles = _.sortBy(articles, (article) => {\n        return new moment(article.pubDate).format();\n      }).reverse();\n\n      resolve(sortedArticles);\n    })\n    .catch(err => {\n      console.log('error: ', err);\n    });\n  });\n};\n\nexport default getArticles;\n","import React, {useState} from 'react';\nimport { Row, Col, Button, Container } from 'react-bootstrap';\nimport style from './Article.module.css';\n\nconst Article = props => {\n  const [hideContent, setHideContent] = useState(true);\n  const [readMore, setReadMore] = useState('Read More...');\n  const {image, link, title, author, pubDate, categories, content, source} = props;\n\n  const renderCategories = (categories) => {\n    if (!categories) {\n        return <div></div>;\n    }\n    return <div>Tags: {categories.join(', ')}</div>;\n  };\n\n  const showContentClickHandler = (event) => {\n    if (hideContent) {\n      setHideContent(false);\n      setReadMore('Read Less...');\n    } else {\n      setHideContent(true);\n      setReadMore('Read More...');\n    }\n  };\n\n  return (\n    <Container className={style.Article}>\n      <Row>\n        <Col xs={12} md={4} className={style.Image}>\n          <img src={image} alt='thumbnail for article'></img>\n        </Col>\n        <Col xs={12} md={8}>\n          <div className={style.ArticleInfo}>\n            <Row className={style.ArticleTitle}>\n              <a href={link} target='blank'>{title}</a>\n            </Row>\n            <Row className={style.Author}>\n              {author ? `${author} at ${source}` : source}\n            </Row>\n            <Row className={style.PubDate}>\n              {pubDate}\n            </Row>\n            <Row className={style.Categories}>\n              {renderCategories(categories)}\n            </Row>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button variant=\"secondary\" onClick={showContentClickHandler}>{readMore}</Button>\n          <div hidden={hideContent} dangerouslySetInnerHTML={{__html: content}} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Article;\n","import React, { useState, useEffect } from \"react\";\r\nimport Callers from '../../../callers';\r\nimport uuidv4 from 'uuid/v4';\r\nimport Article from './Article/Article';\r\nimport {feed} from '../../../constants';\r\n\r\nconst Articles = props => {\r\n  const corsProxy = feed.CORS_PROXY;\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Callers.getArticles()\r\n      .then(articles => {\r\n        setArticles([\r\n          ...articles\r\n        ]);\r\n      })\r\n      .catch(err => {\r\n        console.log('error: ', err);\r\n      });\r\n  }, [corsProxy]);\r\n\r\n  const renderArticles = () => {\r\n    const hhArticles = articles.map((article) => {\r\n      return (\r\n        <Article\r\n          key={uuidv4()}\r\n          image={article.thumbnail}\r\n          link={article.link}\r\n          title={article.title}\r\n          author={article.author}\r\n          pubDate={article.formattedPubDate}\r\n          categories={article.categories}\r\n          content={article.content}\r\n          source={article.source}\r\n        />\r\n      );\r\n    });\r\n\r\n    return hhArticles;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderArticles()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React from \"react\";\r\nimport Articles from \"./Articles/Articles\";\r\n\r\nconst NewsFeed = props => {\r\n  return (\r\n    <div>\r\n      <h2>News</h2>\r\n      <Articles />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsFeed;\r\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header/Header\";\nimport NewsFeed from \"./NewsFeed/NewsFeed\";\n\nconst App = props => {\n  const [currentPage, setCurrentPage] = useState('news');\n\n  const handlePageSet = (page) => {\n    console.log('page: ', page);\n  };\n\n  return (\n    <>\n      <Header\n        setCurrentPage={handlePageSet}\n      />\n      <Container>\n        <NewsFeed />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__1PxDW\",\"Image\":\"Article_Image__rljac\",\"ArticleInfo\":\"Article_ArticleInfo__2PkBa\",\"ArticleTitle\":\"Article_ArticleTitle__3VbxL\",\"Author\":\"Article_Author__1iEOS\",\"PubDate\":\"Article_PubDate__1nap_\",\"Categories\":\"Article_Categories__18jYn\"};"],"sourceRoot":""}